/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

1. ¿Que es?

C# es un lenguaje de programación moderno, seguro y fácil de usar para el desarrollo de aplicaciones. 
Se inspiro en C ++ y Java, pero se diseño para ser mas fácil de usar que C ++, y a la vez más rápido y 
más potente que Java.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

2. ¿Cuáles son las características distintas de C# de otros lenguajes de programación?

Algunas de las características distintas de C# que lo diferencian de otros lenguajes de programación son:

- Orientación a objetos: C# es un lenguaje de programación orientado a objetos, lo que significa que las aplicaciones 
  se crean mediante la combinación de objetos que interactúan entre sí. Esta característica permite crear aplicaciones 
  mas flexibles y escalables.

- Tipado estático: C# es un lenguaje fuertemente tipado, lo que significa que los tipos de datos de las variables se 
  declaran explícitamente. Esto ayuda a evitar errores en tiempo de ejecución y mejorar la legibilidad del código.

- Recolección de basura: utiliza la recolección de basura para liberar automáticamente la memoria que ya no se utiliza. 
  Esto simplifica el trabajo del programador y ayuda a evitar fugas de memoria.

- Expresiones lambda: C# admite expresiones lambda, que son bloques de código cortos que se pueden usar para expresar
  operaciones simples. Estas expresiones son útiles para la programación funcional y para la creación de código más 
  conciso y eficiente.

- LINQ: C# incluye la biblioteca LINQ (Languaje-Integrated Query) que proporciona un conjunto de herramientas para trabajar 
  con datos de forma eficiente. LINQ permite escribir consultas sobre datos de diferentes fuentes, como bases de datos, 
  archivos y colecciones.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

3. ¿Para que se creo C#?

Los objetivos específicos de la creación de C# eran los siguientes:

- Crear un lenguaje de programación que fuera fácil de aprender y usar para los programadores principiantes.

- Crear un lenguaje que fuera seguro y evitara errores comunes

- Crear un lenguaje de programación que fuera potente y eficiente, capaz de crear aplicaciones de alto rendimiento

- Crear un lenguaje de programación que fuera compatible con la plataforma .NET que es una plataforma de desarrollo de software de 
  código abierto que proporciona un conjunto de herramientas y bibliotecas para crear aplicaciones.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

4. ¿En que contextos se utiliza C#?

- Desarrollo de aplicaciones empresariales
    
    C# es un lenguaje de programación popular para el desarrollo de aplicaciones empresariales, ya que ofrece una combinación 
    de características que lo hacen adecuado para este tipo de aplicaciones. C# se puede utilizar para crear aplicaciones web, 
    aplicaciones móviles, aplicaciones de escritorio y aplicaciones de líneas de comandos.
     
- Desarrollo de juegos
    
    C# es un lenguaje de programación popular para el desarrollo de juegos, ya que ofrece una combinación de características 
    que lo hacen adecuado para este tipo de aplicaciones. C# se puede utilizar para crear juegos 2D, juegos 3D y juegos de 
    realidad virtual.
    
- Desarrollo de aplicaciones Web
    
    C# se puede utilizar para crear aplicaciones aplicaciones web, ya que ofrece una serie de bibliotecas y herramientas que 
    facilitan el desarrollo de aplicaciones web. C# se puede utilizar para crear aplicaciones web dinámicas. estáticas y móviles.
    
- Desarrollo de aplicaciones Móviles
    
    C# se puede utilizar para crear aplicaciones móviles, ya que ofrece una serie de bibliotecas y herramientas que facilitan el 
    desarrollo de aplicaciones móviles. C# es puede utilizar para crear aplicaciones móviles. C# se puede utilizar para crear 
    aplicaciones móviles para ¡OS, Android y Windows.
    
- Desarrollo de aplicaciones de Escritorio
    
    C# se puede utilizar para crear aplicaciones de escritorio, ya que ofrece una serie de bibliotecas y herramientas que facilitan 
    el desarrollo de aplicaciones de escritorio. C# se puede utilizar para crear aplicaciones de escritorio de Windows, macOS y Linux.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

5. ¿Qué ventajas ofrece C# sobre otros lenguajes?

- Facilidad de aprendizaje
    
    C# tiene una sintaxis similar a otros lenguajes de programación populares, como C++, Java y JavaScript. Esto facilita el aprendizaje 
    de C# para los programadores que ya tienen experiencia con estos lenguajes.

- Plataforma .NET

    C# se ejecuta en la plataforma .NET, que es una plataforma de desarrollo de software de código abierto que proporciona un conjunto de
    herramientas y bibliotecas para crear aplicaciones. La plataforma .NET ofrece una amplia gama de soporte para diferentes tipos de 
    aplicaciones, desde aplicaciones de escritorio hasta aplicaciones web y móviles.

- Comunidad activa
    
    C# tiene una comunidad activa de desarrolladores que proporciona soporte y recursos para los programadores que utilizan C#. 
    Esta comunidad ayuda a los programadores a aprender y a desarrollar aplicaciones con C#.
    
- Orientación a objetos
    
    C# es un lenguaje de programación orientado a objetos, lo que significa que las aplicaciones se crean mediante la combinación de 
    objetos que interactúan entre si. Esta característica permite crear aplicaciones mas flexibles y escalables.
    
- Tipado estático
    
    C# es un lenguaje fuertemente tipado, lo que significa que los tipos de datos de las variables se declara explícitamente. Esto 
    ayuda a evitar errores en tiempo de ejecución y a mejorar la legibilidad del código.
    
- Recolección de basura
    
    C# utiliza la recolección de basura para liberar automáticamente memoria que ya no se utiliza. Esto significa el trabajo del 
    programador y ayuda a evitar fugas de memoria.
    
- Expresión lambda
    
    C# admite expresiones lambda, que son bloques de código cortos que se pueden usar para expresar operaciones simples. 
    Estas expresiones son útiles para la programación funcional y para la creación de código mas conciso y eficiente.
    
- LINQ
    
    C# incluye la biblioteca LINQ (Language-Integrated Query), que proporciona un conjunto de herramientas para trabajar con datos 
    de forma eficiente. LINQ permite escribir consultas sobre datos de diferentes fuentes, como bases de datos, archivos y colecciones.
    